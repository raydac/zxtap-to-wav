<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.igormaznitsa</groupId>
  <artifactId>zxtap-to-wav</artifactId>
  <version>1.0.2</version>
  <packaging>mvn-golang</packaging>

  <name>ZX TAP to WAV</name>
  <description>Converter of ZX TAP files into WAV files</description>

  <properties>
    <base.target.name>zxtap2wav</base.target.name>
    <mvngolang.version>2.3.10</mvngolang.version>
    <golang.sdk>1.22.2</golang.sdk>
    <do.strip>true</do.strip>
  </properties>

  <issueManagement>
    <system>GitHub Issues</system>
    <url>https://github.com/raydac/zxtap-to-wav/issues</url>
  </issueManagement>

  <prerequisites>
    <maven>${mvn.version}</maven>
  </prerequisites>

  <developers>
    <developer>
      <id>raydac</id>
      <name>Igor Maznitsa</name>
      <email>rrg4400@gmail.com</email>
      <url>http://www.igormaznitsa.com</url>
      <timezone>+2</timezone>
      <roles>
        <role>developer</role>
      </roles>
    </developer>
  </developers>

  <scm>
    <url>https://github.com/raydac/mvn-golang</url>
    <connection>scm:git:git://github.com/raydac/zxtap-to-wav.git</connection>
    <developerConnection>scm:git:git@github.com:raydac/zxtap-to-wav.git</developerConnection>
  </scm>

  <organization>
    <name>Igor Maznitsa</name>
    <url>http://www.igormaznitsa.com</url>
  </organization>

  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <profiles>
    <profile>
      <id>golang-run-main</id>
      <build>
        <plugins>
          <plugin>
            <groupId>com.igormaznitsa</groupId>
            <artifactId>mvn-golang-wrapper</artifactId>
            <version>${mvngolang.version}</version>
            <executions>
              <execution>
                <id>run-main</id>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <packages>
                    <app>main.go</app>
                  </packages>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>publish</id>
      <build>
        <plugins>
            <plugin>
            <groupId>com.igormaznitsa</groupId>
            <artifactId>mvn-golang-wrapper</artifactId>
            <version>${mvngolang.version}</version>
            <executions>
              <execution>
                <id>default-build</id>
                <phase>none</phase>
              </execution>
              <execution>
                <id>build-for-linux-amd64</id>
                <goals>
                  <goal>build</goal>
                </goals>
                <configuration>
                  <targetOs>linux</targetOs>
                  <targetArch>amd64</targetArch>
                  <resultName>${base.target.name}-linux-amd64</resultName>
                  <packages>
                    <app>main.go</app>
                  </packages>
                </configuration>
              </execution>
              <execution>
                <id>build-for-linux-arm64</id>
                <goals>
                  <goal>build</goal>
                </goals>
                <configuration>
                  <targetOs>linux</targetOs>
                  <targetArch>arm64</targetArch>
                  <resultName>${base.target.name}-linux-arm64</resultName>
                  <packages>
                    <app>main.go</app>
                  </packages>
                </configuration>
              </execution>
              <execution>
                <id>build-for-linux386</id>
                <goals>
                  <goal>build</goal>
                </goals>
                <configuration>
                  <strip>${do.strip}</strip>
                  <targetOs>linux</targetOs>
                  <targetArch>386</targetArch>
                  <resultName>${base.target.name}-linux-386</resultName>
                  <packages>
                    <app>main.go</app>
                  </packages>
                </configuration>
              </execution>
              <execution>
                <id>build-for-windows-i386</id>
                <goals>
                  <goal>build</goal>
                </goals>
                <configuration>
                  <strip>${do.strip}</strip>
                  <targetOs>windows</targetOs>
                  <targetArch>386</targetArch>
                  <resultName>${base.target.name}-windows-i386.exe</resultName>
                  <packages>
                    <app>main.go</app>
                  </packages>
                </configuration>
              </execution>
              <execution>
                <id>build-for-windows-amd64</id>
                <goals>
                  <goal>build</goal>
                </goals>
                <configuration>
                  <strip>${do.strip}</strip>
                  <targetOs>windows</targetOs>
                  <targetArch>amd64</targetArch>
                  <resultName>${base.target.name}-windows-amd64.exe</resultName>
                  <packages>
                    <app>main.go</app>
                  </packages>
                </configuration>
              </execution>
              <execution>
                <id>build-for-windows-arm64</id>
                <goals>
                  <goal>build</goal>
                </goals>
                <configuration>
                  <strip>${do.strip}</strip>
                  <targetOs>windows</targetOs>
                  <targetArch>arm64</targetArch>
                  <resultName>${base.target.name}-windows-arm64.exe</resultName>
                  <packages>
                    <app>main.go</app>
                  </packages>
                </configuration>
              </execution>
              <execution>
                <id>build-for-macos64</id>
                <goals>
                  <goal>build</goal>
                </goals>
                <configuration>
                  <strip>${do.strip}</strip>
                  <targetOs>darwin</targetOs>
                  <targetArch>amd64</targetArch>
                  <resultName>${base.target.name}-macos-amd64</resultName>
                  <packages>
                    <app>main.go</app>
                  </packages>
                </configuration>
              </execution>
              <execution>
                <id>build-for-macos-arm64</id>
                <goals>
                  <goal>build</goal>
                </goals>
                <configuration>
                  <strip>${do.strip}</strip>
                  <targetOs>darwin</targetOs>
                  <targetArch>arm64</targetArch>
                  <resultName>${base.target.name}-macos-arm64</resultName>
                  <packages>
                    <app>main.go</app>
                  </packages>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <build>
    <sourceDirectory>${basedir}${file.separator}src</sourceDirectory>
    <directory>${basedir}${file.separator}bin</directory>
    <plugins>
      <plugin>
        <groupId>com.igormaznitsa</groupId>
        <artifactId>mvn-golang-wrapper</artifactId>
        <version>${mvngolang.version}</version>
        <extensions>true</extensions>
        <configuration>
          <goVersion>${golang.sdk}</goVersion>
        </configuration>
      </plugin>
    </plugins>
  </build>

</project>
